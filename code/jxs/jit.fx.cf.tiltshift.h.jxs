<jittershader name="jit.fx.cf.tiltshift.h">
	<param name="tex0" type="int" default="0" />
	<param name="maskTex" type="int" default="1" />
	<param name="randTex" type="int" default="2" />
	<texture file="stbn_uvec2_null_scalar_tiled.png" type="float16" unit="2" rectangle="0" filter="none none" wrap="repeat repeat"/>	
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="blur_amount" type="float" default="1" />
	<param name="tile" type="vec2" default="0. 0." />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="maskTex" program="fp" />
		<bind param="randTex" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat" program="vp" />
		<bind param="blur_amount" program="fp" />
		<bind param="tile" program="fp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec2 uv;
uniform mat4 texMat;

out jit_PerVertex {
	vec2 uv;
	vec2 normUV;
	vec2 snormUV;
} jit_out;

void main(void) {
	gl_Position = vec4(uv*2 - 1, 0, 1);
	jit_out.uv = (texMat * vec4(uv,0,1)).xy;
	jit_out.normUV = uv;
	jit_out.snormUV = gl_Position.xy;
}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core


layout (location = 0) out vec4 outColor;

uniform sampler2DRect tex0, randTex;
uniform sampler2D maskTex;
uniform float blur_amount;
uniform vec2 tile;

in jit_PerVertex {
	vec2 uv;
	vec2 normUV;
	vec2 snormUV;
} jit_in;

vec4 blur5(sampler2DRect image) {
  vec4 color = vec4(0.0);
  vec2 direction = texelFetch(randTex, ivec2(mod(jit_in.uv, 128) + tile)).xy*2 - 1;
  float mask = texture(maskTex, jit_in.normUV).r;
  direction = direction.yx;
  vec2 off1 = vec2(1.3333333333333333) * direction * blur_amount * mask;
  color += texture(image, jit_in.uv) * 0.29411764705882354;
  color += texture(image, jit_in.uv + (off1)) * 0.35294117647058826;
  color += texture(image, jit_in.uv - (off1)) * 0.35294117647058826;
  return color; 
}

void main(void) {

	outColor = blur5(tex0);
}
]]>
</program>
</language>
</jittershader>
